--- Joining tables to gather all necessary data ---
Select
ord.order_id,
cus. customer_id,
concat (cus.first_name, ' ', cus.last_name) as 'customers',
cus.city,
cus.state,
ord. order_date,
sum(ite.quantity) as 'total_units',
sum(ite.quantity * ite.list_price) as 'revenue',
pro.product_name,
cat.category_name,
sto.store_name,
concat(sta.first_name,' ', sta.last_name) as 'sales_rep'
From sales.orders ord
join sales.customers cus 
on ord.customer_id = cus.customer_id
Join sales.order_items ite
on ord.order_id = ite.order_id
Join production.products pro
on ite.product_id = pro.product_id
join production.categories cat
on pro.category_id = cat.category_id
join sales.stores sto
on ord.store_id = sto.store_id
join sales.staffs sta
on ord.staff_id = sta.staff_id
group by
ord.order_id,
cus. customer_id,
concat (cus.first_name, ' ', cus.last_name),
cus.city,
cus.state,
ord. order_date,
pro.product_name,
cat.category_name,
sto. store_name,
concat(sta.first_name,' ', sta.last_name)

---Added the table I created above as a new table dbo.newbike---

---Avg spent by Customer---
SELECT AVG(avg_revenue) AS tru_avg_revenue
FROM (
    SELECT order_id, AVG(revenue) AS avg_revenue
    FROM dbo.newbike
    GROUP BY order_id
) AS subquery;

---Repeat Customers---

SELECT COUNT(*) AS repeat_cust
FROM (
    SELECT customer_id
    FROM dbo.newbike
    GROUP BY customer_id
    HAVING COUNT(DISTINCT order_id) > 1
) AS subquery;

---Most Profitable cities ---
SELECT city, SUM(revenue) AS tot_rev
FROM dbo.newbike
GROUP BY city
ORDER BY tot_rev DESC;

---Revenue generated by best sales reps---
SELECT 
    SUM(revenue)
FROM dbo.newbike
WHERE sales_rep IN ('Marcelene Boyer', 'Venita Daniel');

---% of total rev that can be attributed to saleswomen---
SELECT 
    (5826242.22926331 / SUM(revenue)) * 100 AS percentage
FROM dbo.newbike;

--- Most popular product categories in each state ---

SELECT state, category_name, SUM(total_units) AS tot_units
FROM dbo.newbike
GROUP BY state, category_name
ORDER BY state, tot_units DESC;

----Most popular products and the revenue generated by each ---

SELECT TOP 5 product_name, SUM(total_units) AS units_sold, SUM(revenue) AS tot_rev
FROM dbo.newbike
GROUP BY product_name
ORDER BY units_sold DESC;

--- Most profitable products and the number of units sold ---

SELECT TOP 5 product_name, SUM(revenue) AS tot_rev, SUM(total_units) AS units_sold
FROM dbo.newbike
GROUP BY product_name
ORDER BY tot_rev DESC;

---Total revenue generated in early 2018---

SELECT SUM(revenue)
FROM dbo.newbike
WHERE order_date >= '2018-01-01' AND order_date < '2018-05-01';

--- Total revenue generated in May 2018 ---

SELECT SUM(revenue) 
FROM dbo.newbike
WHERE order_date >= '2018-05-01' AND order_date < '2018-06-01';

--- Total revenue generated in late 2018 ---

SELECT SUM(revenue) 
FROM dbo.newbike
WHERE order_date >= '2018-06-01' AND order_date <= '2018-12-31';

---List of locations after 6/1/18---

SELECT COUNT(DISTINCT city) 
FROM dbo.newbike
WHERE order_date > '2018-06-01';

---Total revenue by city from 1/1/2018 - 4/30/2018 compared to 4/30/18 - 12/30/2018---
SELECT 
  city,
  SUM(CASE WHEN order_date >= '2018-01-01' AND order_date <= '2018-04-30' THEN revenue ELSE 0 END) AS early2018,
  SUM(CASE WHEN order_date > '2018-04-30' AND order_date <= '2018-12-30' THEN revenue ELSE 0 END) AS late2018
FROM dbo.newbike
GROUP BY city
ORDER BY early2018 desc;

--- When was the last Cyclocross sale ---
SELECT TOP 1 order_date
FROM dbo.newbike
WHERE category_name = 'Cyclocross Bicycles'
ORDER BY order_date DESC;
